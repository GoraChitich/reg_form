{"version":3,"sources":["models/Record.js","TableChangeServiceView.js","components/StrTable/StrTable.js","components/Form/Form.js","DelAppointment.js","App.js","reportWebVitals.js","index.js"],"names":["Record","props","this","firstname","lastname","email","phone","birthdate","isVisible","visible","TableChangeServiceView","record","dbType","options","method","headers","data","number","url","axios","then","res","console","log","catch","er","id","delete","state","numberUpdate","birhtDate","StrTable","params","useState","firstName","setFirstName","lastName","setLastName","setEmail","setPhone","setBirthdate","useEffect","funcCallBack","className","index","htmlFor","class","type","name","value","onChange","e","target","required","selected","date","dateFormat","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","shouldCloseOnSelect","onClick","deleteRecord","Form","URLSearchParams","location","search","isUpdate","get","cntPersons","records","googleTab","isTableFilled","maxCountOfPersons","regButton","regButtonCaption","actualDate","Date","i","setRecord","push","actualPersonNumber","persons","redirect","changeOfPersons","bind","createUpdateStr","presetRegistryButton","handleChangeDatePicker","handleChangeFirstName","handleChangeLastName","handleChangeEmail","handleChangePhone","submitHandler","submitHandlerUpdate","submitHandlerAdd","getTdsOfTr","getFirstDataFromTable","tableChangeServiceView","event","length","node","attrs","attributes","key","childNodes","rawText","currentRow","restData","tabTag","HTMLParser","parse","querySelector","tabBody","forEach","setState","preventDefault","inStr","updateStr","htmlBody","cnt","updateRecord","emailjs","templateParams","from_name","to_name","subject","html","response","status","text","err","insertRecord","map","item","delAppointment","items","result","newArray","splice","onSubmit","onSelect","checked","regEmail","concat","Component","DelAppointment","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd35f871.chunk.js","sourcesContent":["\r\nclass Record {\r\n\t\r\n\tconstructor(props) {\r\n        \r\n            this.firstname= '';\r\n            this.lastname= '';\r\n            this.email= '';\r\n            this.phone =  '';\r\n            this.birthdate = '';\r\n         this.isVisible = '';\r\n        \t\t\t\r\n\t}\r\n\r\n    /**\r\n     * set a content of record\r\n     * @param {*} firstname \r\n     * @param {*} lastname \r\n     * @param {*} email \r\n     * @param {*} phone \r\n     * @param {*} birthdate \r\n     */\r\n     createRecord(firstname, lastname, email, phone, birthdate, visible) {\r\n        this.firstname = firstname;\r\n        this.lastname = lastname;\r\n        this.email = email;\r\n        this.phone = phone;\r\n        this.birthdate = birthdate;\r\n        this.visible = visible;\r\n        return this;\r\n    }\r\n\r\n}\r\nexport default Record;","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\n\r\nclass TableChangeServiceView {\r\n\t\r\n\r\n\t\r\n\tinsertRecord(record, dbType) {\r\n\t\tswitch (dbType) {\r\n\t\t\t// insert direct to google table\r\n\t\t\tcase 1: {\r\n\t\t\t\t\t\tlet url = \"https://sheet.best/api/sheets/9789324f-9b9f-40c2-85d2-30e3de0fa441\";\r\n\t\t\t\t\t\tlet dataRequest = [{number: record.number, firstname: record.firstname, lastname: record.lastname, phone: record.phone, email: record.email}];\r\n\t\t\t\t\t\t// send data to table that was booked\r\n\t\t\t\t\t\tlet options = { \r\n\t\t\t\t\t\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\theaders: { \"content-type\": \"application/json\" },\r\n\t\t\t\t\t\t\t\t\t\tdata: dataRequest,\r\n\t\t\t\t\t\t\t\t\t\turl \r\n\t\t\t\t\t\t\t\t\t };\r\n\t\t\t\t\t\taxios(options).then(res => {\r\n\t\t\t\t\t\t\tconsole.log(\"the data was added in the table \", res.data);\r\n\t\t\t\t\t\t}).catch(er => {\r\n\t\t\t\t\t\t\tconsole.log(\"no data sorry \", er);\r\n\t\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// insert to database\r\n\t\t\tdefault: {\r\n\t\t\t\t//\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tdeleteRecord(id, dbType) {\r\n\t\tswitch (dbType) {\r\n\t\t\tcase 1: {\r\n\t\t\t\t\t\taxios.delete(\"https://sheet.best/api/sheets/9789324f-9b9f-40c2-85d2-30e3de0fa441/number/\" + id).then(res => {\r\n        \t\t\t\tconsole.log(\"the appointment was canceled\");        \r\n      \t\t\t\t});\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\t//\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * make uodate\r\n\t * depend on dbType\r\n\t * for google tables is 1\r\n\t * @param {} record \r\n\t * @param {*} dbType\r\n\t */\r\n\tupdateRecord(record, dbType) {\r\n\t\tswitch (dbType) {\r\n\t\t\tcase 1: {\r\n\t\t\t\tlet url = \"https://sheet.best/api/sheets/9789324f-9b9f-40c2-85d2-30e3de0fa441/\" + this.state.numberUpdate-1;\r\n\t\t\t\tlet dataRequest = [{number: record.numberUpdate, firstname: record.firstname, lastname: record.lastname, phone: record.phone, email: record.email, birhtDate: record.birhtDate}];\r\n\t\t\t\tlet options = { \r\n\t\t\t\t\t\t\t\tmethod: \"PATCH\",\r\n\t\t\t\t\t\t\t\theaders: { \"accept\": \"application/json\", \"content-type\": \"application/json\" },\r\n\t\t\t\t\t\t\t\tdata: dataRequest,\r\n\t\t\t\t\t\t\t\turl \r\n\t  \t\t\t\t\t\t  };\r\n\t  \t\t\taxios(options).then(res => {\r\n        \t\t\t\t\t\t\t\t\t console.log(\"the data was updated for row \", this.state.numberUpdate);\r\n\t\t\t\t\t\t\t\t\t\t   }).catch(er => {\r\n        \t\t\t\t\t\t\t\t\t console.log(\"error on update \", er);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n\r\nexport default TableChangeServiceView;","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport './StrTable.css';\r\n\r\nexport default function StrTable(params) {\r\n    const [firstName, setFirstName] = useState(params.record.firstName);\r\n    const [lastname, setLastName] = useState(params.record.lastName);\r\n    const [email, setEmail] = useState(params.record.email);\r\n    const [phone, setPhone] = useState(params.record.phone);\r\n    const [birthdate, setBirthdate] = useState(params.record.birthdate);\r\n\r\n    useEffect(()=>{\r\n        params.funcCallBack({firstName, lastname, email, phone, birthdate});\r\n    });\r\n\r\n    return (\r\n        <div className=\"strtable-c\">\r\n            <h2>{`Person # ${params.index+1}`}</h2>\r\n            <div className='input-div1'>\r\n                <label className='label1' htmlFor='firstname{index}'>Vorname <span class=\"reqsymbol\">*</span></label>\r\n                <input type='text' name=\"firstname{index}\" id='firstname{index}' className='input1' value={firstName} onChange={(e) => setFirstName(e.target.value)} required />\r\n                {/* <input type='text' name=\"firstname{index}\" id='firstname{index}' className='input1' value={record.firstname} onChange={this.handleChangeFirstName} required /> */}\r\n            </div>\r\n            <div className='input-div2'>\r\n                <label className='label2' htmlFor='lastname1'>Name <span class=\"reqsymbol\">*</span></label>\r\n                <input type='text' name='lastname{index}' id='lastname{index}' className='input1' value={lastname} onChange={(e) => setLastName(e.target.value)} required />\r\n                {/* <input type='text' name='lastname{index}' id='lastname{index}' className='input1' value={record.lastname} onChange={this.handleChangeLastName} required /> */}\r\n            </div>\r\n            <div className='input-div3'>\r\n                <label className='label3' htmlFor='email1'>Email <span class=\"reqsymbol\">*</span></label>\r\n                <input type='text' name='email{index}' id='email{index}' className='input1' value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                {/* <input type='text' name='email{index}' id='email{index}' className='input1' value={record.email} onChange={this.handleChangeEmail} required /> */}\r\n            </div>\r\n            <div className='input-div4'><label className='label4' htmlFor='phone{index}'>Telefon<span class=\"reqsymbol\">*</span></label>\r\n                <input type='text' name='phone{index}' id='phone{index}' className='input1' value={phone} onChange={(e) => setPhone(e.target.value)} required />\r\n                {/* <input type='text' name='phone{index}' id='phone{index}' className='input1' value={record.phone} onChange={this.handleChangePhone} required /> */}\r\n            </div>\r\n            <div className='input-div5'><label className='label5' htmlFor='birthdate{index}'>Geburtsdatum<span class=\"reqsymbol\">*</span></label>\r\n                <DatePicker name='birthdate{index}' id='birthdate{index}' selected={birthdate} onChange={(date) => setBirthdate(date)} required dateFormat=\"yyyy-MM-dd\"\r\n                    peekNextMonth={true} showMonthDropdown={true} showYearDropdown={true} dropdownMode=\"select\" shouldCloseOnSelect={true} />\r\n                {/* <DatePicker name='birthdate{index}' id='birthdate{index}' selected={record.birthdate} required dateFormat=\"yyyy-MM-dd\"\r\n\t\t\t\t\t\t\tpeekNextMonth={true} showMonthDropdown={true} showYearDropdown={true} dropdownMode=\"select\" shouldCloseOnSelect={true} /> */}\r\n            </div>\r\n            <button onClick={params.deleteRecord}>Delete</button>\r\n        </div>\r\n    );\r\n}","// import './App.css';\r\nimport React, { Component } from 'react';\r\nimport HTMLParser from 'fast-html-parser';\r\nimport axios from \"axios\";\r\nimport * as emailjs from 'emailjs-com';\r\nimport DatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css'\r\nimport Record from './../../models/Record';\r\nimport TableChangeServiceView from './../../TableChangeServiceView.js'\r\nimport StrTable from '../StrTable/StrTable';\r\n\r\nimport './Form.css'\r\n\r\n\r\nclass Form extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst params = new URLSearchParams(props.location.search);\r\n\t\tconst numRecords = [1, 2, 3, 4, 5, 6];\r\n\t\tlet isUpdate = params.get('isUpdate');\r\n\t\tlet cntPersons = params.get('cntPersons');\r\n\t\t// this case - update exists records in the table\r\n\t\tif (isUpdate) {\r\n\t\t\tthis.state = {\r\n\t\t\t\trecords: [],\r\n\t\t\t\tgoogleTab: [],\r\n\t\t\t\tisTableFilled: false,\r\n\t\t\t\tisUpdate: true,\r\n\t\t\t\tmaxCountOfPersons: 50,\r\n\t\t\t\tregButton: false,\r\n\t\t\t\tregButtonCaption: \"Ändern\",\r\n\t\t\t\tactualDate: new Date(params.get('date') + 'T00:00:00Z'),\r\n\t\t\t\t// the number for update\r\n\t\t\t\tnumberUpdate: params.get('number')\r\n\t\t\t};\r\n\t\t\t// set records to array for show data for update \r\n\t\t\tfor (let i = 0; i < cntPersons - 1; i++) {\r\n\t\t\t\tnew Record().setRecord(params.get('firstname' + i + 1),\r\n\t\t\t\t\tparams.get('lastname' + i + 1),\r\n\t\t\t\t\tparams.get('phone' + i + 1),\r\n\t\t\t\t\tparams.get('email' + i + 1),\r\n\t\t\t\t\tparams.get('birhtday' + i + 1)\r\n\t\t\t\t);\r\n\t\t\t\tthis.state.records.push(Record);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// case adding data in the table (the first setting data)\r\n\t\telse {\r\n\t\t\tthis.state = {\r\n\t\t\t\tactualPersonNumber: 1,\r\n\t\t\t\tpersons: [],\r\n\t\t\t\trecords: [new Record()],\r\n\t\t\t\tredirect: false,\r\n\t\t\t\tgoogleTab: [],\r\n\t\t\t\tisTableFilled: false,\r\n\t\t\t\tisUpdate: false,\r\n\t\t\t\tactualDate: new Date(),\r\n\t\t\t\tmaxCountOfPersons: 50,\r\n\t\t\t\tregButton: false,\r\n\t\t\t\tregButtonCaption: \"Anmelden\"\r\n\t\t\t};\r\n\t\t\t// this.state.records.push(new Record().createRecord('', '', '', '', new Date(), 'visible'));\r\n\t\t\t// for (let i = 1; i < 6; i++) {\r\n\t\t\t// \tthis.state.records.push(new Record().createRecord('', '', '', '', new Date(), 'hidden'));\r\n\t\t\t// }\r\n\t\t}\r\n\t\tthis.changeOfPersons = this.changeOfPersons.bind(this);\r\n\t\tthis.createUpdateStr = this.createUpdateStr.bind(this);\r\n\t\tthis.presetRegistryButton = this.presetRegistryButton.bind(this);\r\n\t\tthis.handleChangeDatePicker = this.handleChangeDatePicker.bind(this);\r\n\t\tthis.handleChangeFirstName = this.handleChangeFirstName.bind(this);\r\n\t\tthis.handleChangeLastName = this.handleChangeLastName.bind(this);\r\n\t\tthis.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n\t\tthis.handleChangePhone = this.handleChangePhone.bind(this);\r\n\t\tthis.submitHandler = this.submitHandler.bind(this);\r\n\t\tthis.submitHandlerUpdate = this.handleChangePhone.bind(this);\r\n\t\tthis.submitHandlerAdd = this.submitHandlerAdd.bind(this);\r\n\t\tthis.getTdsOfTr = this.getTdsOfTr.bind(this);\r\n\t\tthis.getFirstDataFromTable = this.getFirstDataFromTable.bind(this);\r\n\t\tthis.tableChangeServiceView = new TableChangeServiceView();\r\n\t}\r\n\r\n\tchangeOfPersons(event) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * for update mode only name of button setten, for adding mode analyse if it is possible enabling a button registry or not\r\n\t */\r\n\tpresetRegistryButton() {\r\n\t\tif ((!this.state.isUpdate) && (this.state.googleTab.length < this.state.maxCountOfPersons)) {\r\n\t\t\tthis.state.regButton = false;\r\n\t\t}\r\n\t}\r\n\r\n\thandleChangeDatePicker(date) {\r\n\t\tthis.state.actualDate = date;\r\n\t}\r\n\r\n\tgetTdsOfTr(node) {\r\n\t\tvar attrs = node.attributes;\r\n\t\tfor (var key in attrs) {\r\n\t\t\tif (attrs[key] === 'height: 20px'); {\r\n\t\t\t\tif (\r\n\t\t\t\t\t(node.childNodes[1] != null) && (node.childNodes[2].childNodes[0] != null) && (node.childNodes[2].childNodes[0].rawText != null) &&\r\n\t\t\t\t\t(node.childNodes[2] != null) && (node.childNodes[3].childNodes[0] != null) && (node.childNodes[3].childNodes[0].rawText != null)\r\n\t\t\t\t) {\r\n\t\t\t\t\tlet currentRow = [{ \"number\": node.childNodes[1].childNodes[0].rawText, \"firstname\": node.childNodes[2].childNodes[0].rawText }, { \"lastname\": node.childNodes[3].childNodes[0].rawText }];\r\n\t\t\t\t\tthis.state.googleTab.push(currentRow);\r\n\t\t\t\t\t// this.presetRegistryButton();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tgetFirstDataFromTable() {\r\n\t\tlet url = \"https://docs.google.com/spreadsheets/d/14z1wb8Ei0-6rwiS6qUIvz8BJVEWhK0IMIOJnvCvkz94/edit#gid=0\";\r\n\t\taxios.get(url).then(res => {\r\n\t\t\tconst restData = res.data;\r\n\t\t\tvar root = HTMLParser.parse(restData);\r\n\t\t\tvar tabTag = root.querySelector('table');\r\n\t\t\tif (tabTag != null) {\r\n\t\t\t\tvar tabBody = tabTag.querySelector('tbody');\r\n\t\t\t\tif ((tabBody != null) && (tabBody.childNodes != null)) {\r\n\t\t\t\t\ttabBody.childNodes.forEach(this.getTdsOfTr);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t//\tthis.setState({ restData });\r\n\t\t);\r\n\t}\r\n\r\n\thandleChangeFirstName(event) {\r\n\t\tthis.setState({ firstname: event.target.value });\r\n\t}\r\n\r\n\thandleChangeLastName(event) {\r\n\t\tthis.setState({ lastname: event.target.value });\r\n\t}\r\n\r\n\thandleChangeEmail(event) {\r\n\t\tthis.setState({ email: event.target.value });\r\n\t}\r\n\r\n\thandleChangePhone(event) {\r\n\t\tthis.setState({ phone: event.target.value });\r\n\t}\r\n\r\n\tsubmitHandler(event) {\r\n\t\tevent.preventDefault();\r\n\t\tif (this.state.isUpdate) {\r\n\t\t\tthis.submitHandlerUpdate();\r\n\t\t} else {\r\n\t\t\tthis.submitHandlerAdd();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * created a string for not duplicate a code for update link\r\n\t * @param {*} inStr \r\n\t * @returns \r\n\t */\r\n\tcreateUpdateStr(inStr) {\r\n\t\tlet htmlBody = inStr + \" beim Liturgie in russischen Orthodoxkirche Stuttgart am , \" + this.state.actualDate +\r\n\t\t\t\" mit folgenden Link können Sie den Termin stornieren <a href=\\\"http://localhost:3000/delAppointment?number=\" + this.state.records[0].number +\r\n\t\t\t\"\\\">Termin stornieren </a>, mit folgenden Link können Sie den Termin ändern <a href=\\\"http://localhost:3000/updateAppointment?isUpdate=true\";\r\n\t\tlet updateStr;\r\n\t\tlet cnt = 0;\r\n\t\tthis.state.records.forEach(record => {\r\n\t\t\tthis.tableChangeServiceView.updateRecord(record, 1);\r\n\t\t\tcnt++;\r\n\t\t\tupdateStr = updateStr + \"&firstname \" + cnt + \"=\"\r\n\t\t\t\t+ record.firstname + \"&lastname\" + cnt + \"=\" + record.lastname +\r\n\t\t\t\t\"&phone\" + cnt + \"=\" + record.phone + \"&mail\" + cnt + \"=\" + record.email\r\n\t\t\t\t+ \"birthdate\" + cnt + \"=\" + record.birthdate;\r\n\r\n\t\t});\r\n\t\treturn htmlBody + updateStr + \"\\\">Termin ändern</a>\"\r\n\t}\r\n\r\n\t/**\r\n\t * update a row with new variables\r\n\t */\r\n\tsubmitHandlerUpdate() {\r\n\r\n\t\temailjs.init(\"user_kKJTlTMteUmJ0TVwOLNC2\");\r\n\t\tlet templateParams = {\r\n\t\t\tfrom_name: 'smolbars@gmail.com',\r\n\t\t\tto_name: this.state.email,\r\n\t\t\tsubject: \"Anmeldung auf der Liturgie in russischen Orthodoxkirche Stuttgart\",\r\n\t\t\thtml: this.createUpdateStr(\"Sehr geehrte Damen und Herren, Sie haben erfoglreich geändert\")\r\n\t\t};\r\n\t\temailjs.send(\r\n\t\t\t'service_1ls6zy5',\r\n\t\t\t'template_beve9nh',\r\n\t\t\ttemplateParams\r\n\t\t).then(\r\n\t\t\tfunction (response) {\r\n\t\t\t\tconsole.log(response.status, response.text);\r\n\t\t\t},\r\n\t\t\tfunction (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t);\r\n\t\tthis.setState({ redirect: true });\r\n\t}\r\n\r\n\r\n\tsubmitHandlerAdd() {\r\n\t\tthis.tableChangeServiceView.insertRecord(this.state.records[0],1);\r\n\r\n\t\temailjs.init(\"user_kKJTlTMteUmJ0TVwOLNC2\");\r\n\t\tlet templateParams = {\r\n\t\t\tfrom_name: 'smolbars@gmail.com',\r\n\t\t\tto_name: this.state.email,\r\n\t\t\tsubject: \"Anmeldung auf der Liturgie in russischen Orthodoxkirche Stuttgart\",\r\n\t\t\thtml: this.createUpdateStr(\"Sehr geehrte Damen und Herren, Sie haben erfoglreich angemeldet\")\r\n\t\t};\r\n\t\temailjs.send(\r\n\t\t\t'service_1ls6zy5',\r\n\t\t\t'template_beve9nh',\r\n\t\t\ttemplateParams\r\n\t\t).then(\r\n\t\t\tfunction (response) {\r\n\t\t\t\tconsole.log(response.status, response.text);\r\n\t\t\t},\r\n\t\t\tfunction (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t);\r\n\t\tthis.setState({ redirect: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\t// in this brunch need a show data from a filled before table and create a delete button^\r\n\t\tif (this.state.redirect) {\r\n\t\t\treturn (\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tbody>{this.state.googleTab.map(function (item, key) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<tr key={key}>\r\n\t\t\t\t\t\t\t\t<td>{item[1].number}</td>\r\n\t\t\t\t\t\t\t\t<td>{item[1].firstname}</td>\r\n\t\t\t\t\t\t\t\t<td>{item[1].lastname}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t\t<button onClick={this.delAppointment()}>\r\n\t\t\t\t\t\tTermin stornieren\r\n\t\t    </button>\r\n\t\t\t\t</table>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//the first start of form - read a google table and show a registration form\r\n\t\t\tthis.getFirstDataFromTable();\r\n\t\t\tlet index = 0;\r\n\t\t\tconst items = this.state.records.map((record, index) =>\r\n\t\t\t\t<StrTable\r\n\t\t\t\t\trecord={record}\r\n\t\t\t\t\tindex={index}\r\n\t\t\t\t\tfuncCallBack={(result) => { \r\n\t\t\t\t\t\tthis.state.records[index] = result }}\r\n\t\t\t\t\tdeleteRecord={() => {\r\n\t\t\t\t\t\t//copy array and delete current element\r\n\t\t\t\t\t\tconsole.log(this.state.records);\r\n\t\t\t\t\t\tconst newArray = [...this.state.records];\r\n\t\t\t\t\t\tnewArray.splice(index, 1);\r\n\r\n\t\t\t\t\t\tconsole.log(newArray);\r\n\t\t\t\t\t\tthis.setState({ records: newArray });\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\treturn (\r\n\t\t\t\t<form className=\"regForm\" onSubmit={this.submitHandler}>\r\n\t\t\t\t\t<div class='sector'>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label> Termin der Lithurigie oder Dienst</label>\r\n\t\t\t\t\t\t\t<DatePicker selected={this.state.actualDate} onSelect={this.handleChangeDatePicker} dateFormat=\"yyyy-MM-dd\" peekNextMonth={true}\r\n\t\t\t\t\t\t\t\tshowMonthDropdown={true} showYearDropdown={true} dropdownMode=\"select\" shouldCloseOnSelect={true} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div><label>Typ der Anbetung:</label></div>\r\n\t\t\t\t\t\t<label><input type='radio' id='prayer' name='prayer' value='1' checked />Morgen (um 10.00)</label><br></br>\r\n\t\t\t\t\t\t<label><input type='radio' id='prayer' name='prayer' value='2' />Abend (um 18.00)</label><br></br>\r\n\t\t\t\t\t\t{/* <label><input type=\"radio\" id='prayer' name='prayer' value='3' />Lithurgie</label><br></br> */}\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label>Anzahl der Personen: <b> {this.state.records.length}</b></label>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='reg-email'>\r\n\t\t\t\t\t\t\t\t<label className='' htmlFor='regemail'>Email for registration <span class=\"reqsymbol\">*</span></label>\r\n\t\t\t\t\t\t\t\t<input type='text' name=\"regemail\" id='regemail' className='input1' value={this.state.regEmail} onChange={(e) => this.setState({regEmail: e.target.value})} required />\r\n\t\t\t\t\t\t\t\t{/* <input type='text' name=\"firstname{index}\" id='firstname{index}' className='input1' value={record.firstname} onChange={this.handleChangeFirstName} required /> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t{items}\r\n\t\t\t\t\t<button onClick={() => {\r\n\t\t\t\t\t\tthis.setState(\r\n\t\t\t\t\t\t\t{ records: this.state.records.concat(new Record()) })\r\n\t\t\t\t\t}} >\r\n\t\t\t\t\t\tAdd 1 person\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button type=\"submit\">\r\n\t\t\t\t\t\t{this.state.regButtonCaption}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\nexport default Form;","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport TableChangeServiceView from './TableChangeServiceView.js';\r\n\r\nclass DelAppointment extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.delAppointment = this.delAppointment.bind(this);\r\n\t\tconst params = new URLSearchParams(props.location.search);\r\n\t\tlet number = params.get('number');\r\n\t\tthis.delAppointment(number);\t\t\r\n\t}\r\n\t\r\n\t\r\n\tdelAppointment(number) {\r\n\t\tTableChangeServiceView.delAppointment(1, number);\r\n  }\r\n  \r\n  render () {\r\n\t  return (<div>\r\n\t  Sehr geehrte Damen und Herren, den Termin war wegen Ihre Bitte gelöscht!\r\n\t  </div>);\r\n  }\r\n  \r\n}\r\nexport default DelAppointment;","import './App.css';\nimport React, { Component } from 'react';\nimport Form from './components/Form/Form.js';\n// import ReadList from './ReadList.js';\n// <Route path=\"/test\" exact component={ReadList}/>\n\nimport DelAppointment from './DelAppointment.js';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\n\nclass App extends Component {\n  \n render() { return (\n   <Router>\n      <div className=\"App\">\n\t\t    <Route path=\"/\" exact component={Form}/>\n        <Route path=\"/updateAppointment\" exact component={Form}/>\n        <Route path=\"/delAppointment\" exact component={DelAppointment}/>\n      </div>\n\t</Router>\t  \n  );\n }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}